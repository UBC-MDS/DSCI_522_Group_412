my_plot_1
my_plot_2
poisson_model <- glm(runs_scored ~ no_of_walks + no_of_hits, Teams, family = poisson(link = "log"))
summary(poisson_model)
#resid(poisson_model)
plot(density(resid(poisson_model))) #A density plot
qqnorm(resid(poisson_model)) # A quantile normal plot - good for checking normality
qqline(resid(poisson_model))
library(tidyverse)
library(broom)
library(repr)
library(modelr)
library(gridExtra)
library(caret)
library(dplyr)
library(ggplot2)
library(Lahman)
titanic_data <- read_csv("titanic.csv")
my_plot <- ggplot(titanic_data, aes(factor(Survived),Fare))+
geom_boxplot(alpha = 0.5)+
facet_grid(~ Sex)+
labs(title = 'Studying the survival rate',
x = "Survived",
y = "Fare") +
theme(plot.title = element_text( size = 12),
axis.title = element_text( size = 12))+
theme(plot.title = element_text(hjust = 0.5))
my_plot
#titanic_data
titanic_data %>%
ggplot()+
geom_jitter(aes(Fare, Survived), alpha = 0.3)+
geom_smooth(aes(Fare, Survived, color=Sex), method="lm", se=FALSE)+
labs(title = 'Model function overtop raw data',
x = "Fare",
y = "Survival probability")+
theme(plot.title = element_text( size = 12),
axis.title = element_text( size = 12))+
theme(plot.title = element_text(hjust = 0.5))
#summary(lm(Survived ~ Fare+Sex, data = titanic_data))
MLE_model <- glm(Survived ~ Fare+Sex, data = titanic_data, family = binomial)
titanic_train %>%
ggplot() +
geom_point(aes(Fare, Survived, color=Sex), alpha = 0.4)+
geom_smooth(aes(Fare, Survived, color=Sex), method = "glm", method.args = c(family = binomial), se = FALSE) +
labs(y = "Prob. of survival", x = "Fare")+
theme(plot.title = element_text( size = 12),
axis.title = element_text( size = 12))+
theme(plot.title = element_text(hjust = 0.5))
summary(MLE_model)
female_new_individual <- tibble(Sex="female", Fare = 150)
male_new_individual <- tibble(Sex="male", Fare = 150)
# GLM model
MLE_model <- glm(Survived ~ Fare+Sex, data = titanic_data, family = binomial)
# NULL MODEL - No covariates, just the intercept. This is equivalent to mean of the column 'Survived'
null_model <- glm(Survived ~ 1, data = titanic_data , family=binomial)
#type = 'response' ensures that we get probability value as output from the logit link function and not odds.
survival_prob_null_model <- predict(null_model, female_new_individual, type = 'response')
survival_prob_new_female <- predict(MLE_model, female_new_individual, type='response')
survival_prob_new_male <- predict(MLE_model, male_new_individual, type='response')
print(paste("Probability of surviving acc.to the null model is", survival_prob_null_model))
print(paste("Acc.to the GLM model, the probability of surviving for a new female with Fare = 120 is", survival_prob_new_female))
print(paste("Acc.to the GLM model, the probability of surviving for a new male with Fare = 120 is", survival_prob_new_male))
summary(MLE_model)
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
#male_titanic <- male_titanic %>%
#  mutate(predictions=predict(model_loess_male),
#         sex='male')
#female_titanic <- female_titanic %>%
#  mutate(predictions=predict(model_loess_female),
#         sex='female')
# could also mutuate predictions to model
#predict_titanic <- rbind(male_titanic, female_titanic)
#loess_plot <- predict_titanic %>%
#  ggplot() +
#  geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
#  geom_line(aes(Fare, predictions, color=sex)) +
#  labs(y = "Prob. of survival", x = "Fare")
#loess_plot
#classifying predictied probability values > 0.5 as 1 and <0.5 as 0
male_titanic = ifelse(predict(model_loess_male, type = "response") > 0.5, 1, 0)
male_titanic
#score_parametric_model <- MSE(y_pred = exp(reg$fitted.values), y_true = cars$dist)
#score_local_model <-
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
#male_titanic <- male_titanic %>%
#  mutate(predictions=predict(model_loess_male),
#         sex='male')
#female_titanic <- female_titanic %>%
#  mutate(predictions=predict(model_loess_female),
#         sex='female')
# could also mutuate predictions to model
#predict_titanic <- rbind(male_titanic, female_titanic)
#loess_plot <- predict_titanic %>%
#  ggplot() +
#  geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
#  geom_line(aes(Fare, predictions, color=sex)) +
#  labs(y = "Prob. of survival", x = "Fare")
#loess_plot
#classifying predictied probability values > 0.5 as 1 and <0.5 as 0
male_titanic = ifelse(predict(model_loess_male, type = "response") > 0.5, 'yes', 0)
male_titanic
#score_parametric_model <- MSE(y_pred = exp(reg$fitted.values), y_true = cars$dist)
#score_local_model <-
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
male_titanic <- male_titanic %>%
mutate(predictions=predict(model_loess_male),
sex='male')
#female_titanic <- female_titanic %>%
#  mutate(predictions=predict(model_loess_female),
#         sex='female')
# could also mutuate predictions to model
#predict_titanic <- rbind(male_titanic, female_titanic)
#loess_plot <- predict_titanic %>%
#  ggplot() +
#  geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
#  geom_line(aes(Fare, predictions, color=sex)) +
#  labs(y = "Prob. of survival", x = "Fare")
#loess_plot
#classifying predictied probability values > 0.5 as 1 and <0.5 as 0
#male_titanic = ifelse(predict(model_loess_male, type = "response") > 0.5, 1, 0)
male_titanic
#score_parametric_model <- MSE(y_pred = exp(reg$fitted.values), y_true = cars$dist)
#score_local_model <-
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
male_titanic <- male_titanic %>%
mutate(predictions=predict(model_loess_male),
sex='male')
female_titanic <- female_titanic %>%
mutate(predictions=predict(model_loess_female),
sex='female')
# could also mutuate predictions to model
predict_titanic <- rbind(male_titanic, female_titanic)
loess_plot <- predict_titanic %>%
ggplot() +
geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
geom_line(aes(Fare, predictions, color=sex)) +
labs(y = "Prob. of survival", x = "Fare")
loess_plot
#For MSE Calculation: classifying predictied probability values > 0.5 as 1 and <0.5 as 0
classified_male_titanic = ifelse(predict(model_loess_male, type = "response") > 0.5, 1, 0)
classified_female_titanic = ifelse(predict(model_loess_female, type = "response") > 0.5, 1, 0)
classified_female_titanic
#score_parametric_model <- MSE(y_pred = exp(reg$fitted.values), y_true = cars$dist)
#score_local_model <-
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
male_titanic <- male_titanic %>%
mutate(predictions=predict(model_loess_male),
sex='male')
female_titanic <- female_titanic %>%
mutate(predictions=predict(model_loess_female),
sex='female')
# could also mutuate predictions to model
predict_titanic <- rbind(male_titanic, female_titanic)
loess_plot <- predict_titanic %>%
ggplot() +
geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
geom_line(aes(Fare, predictions, color=sex)) +
labs(y = "Prob. of survival", x = "Fare")
loess_plot
#For MSE Calculation: classifying predictied probability values > 0.5 as 1 and <0.5 as 0
classified_male_titanic = ifelse(predict(model_loess_male, type = "link") > 0.5, 1, 0)
classified_female_titanic = ifelse(predict(model_loess_female, type = "link") > 0.5, 1, 0)
#model_glm_pred = ifelse(predict(model_glm, type = "link") > 0, "Yes", "No")
classified_female_titanic
#score_parametric_model <- MSE(y_pred = exp(reg$fitted.values), y_true = cars$dist)
#score_local_model <-
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
#male_titanic <- male_titanic %>%
#  mutate(predictions=predict(model_loess_male),
#         sex='male')
#female_titanic <- female_titanic %>%
#  mutate(predictions=predict(model_loess_female),
#         sex='female')
# could also mutuate predictions to model
#predict_titanic <- rbind(male_titanic, female_titanic)
#loess_plot <- predict_titanic %>%
#  ggplot() +
#  geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
#  geom_line(aes(Fare, predictions, color=sex)) +
#  labs(y = "Prob. of survival", x = "Fare")
#loess_plot
#For MSE Calculation: classifying predictied probability values > 0.5 as 1 and <0.5 as 0
classified_male_titanic = ifelse(predict(model_loess_male, type = "link") > 0.5, 1, 0)
classified_female_titanic = ifelse(predict(model_loess_female, type = "link") > 0.5, 1, 0)
#model_glm_pred = ifelse(predict(model_glm, type = "link") > 0, "Yes", "No")
classified_female_titanic
#score_parametric_model <- MSE(y_pred = exp(reg$fitted.values), y_true = cars$dist)
#score_local_model <-
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
#male_titanic <- male_titanic %>%
#  mutate(predictions=predict(model_loess_male),
#         sex='male')
#female_titanic <- female_titanic %>%
#  mutate(predictions=predict(model_loess_female),
#         sex='female')
# could also mutuate predictions to model
#predict_titanic <- rbind(male_titanic, female_titanic)
#loess_plot <- predict_titanic %>%
#  ggplot() +
#  geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
#  geom_line(aes(Fare, predictions, color=sex)) +
#  labs(y = "Prob. of survival", x = "Fare")
#loess_plot
#For MSE Calculation: classifying predictied probability values > 0.5 as 1 and <0.5 as 0
classified_male_titanic = ifelse(predict(model_loess_male, type = "link") > 0.5, 1, 0)
classified_female_titanic = ifelse(predict(model_loess_female, type = "link") > 0.5, 1, 0)
#model_glm_pred = ifelse(predict(model_glm, type = "link") > 0, "Yes", "No")
classified_male_titanic
#score_parametric_model <- MSE(y_pred = exp(reg$fitted.values), y_true = cars$dist)
#score_local_model <-
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
male_titanic <- male_titanic %>%
mutate(predictions=predict(model_loess_male),
sex='male')
female_titanic <- female_titanic %>%
mutate(predictions=predict(model_loess_female),
sex='female')
# could also mutuate predictions to model
predict_titanic <- rbind(male_titanic, female_titanic)
loess_plot <- predict_titanic %>%
ggplot() +
geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
geom_line(aes(Fare, predictions, color=sex)) +
labs(y = "Prob. of survival", x = "Fare")
loess_plot
predict_titanic
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
male_titanic <- male_titanic %>%
mutate(predictions=predict(model_loess_male),
sex='male')
female_titanic <- female_titanic %>%
mutate(predictions=predict(model_loess_female),
sex='female')
# could also mutuate predictions to model
predict_titanic <- rbind(male_titanic, female_titanic)
loess_plot <- predict_titanic %>%
ggplot() +
geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
geom_line(aes(Fare, predictions, color=sex)) +
labs(y = "Prob. of survival", x = "Fare")
loess_plot
titanic_data
predict_titanic
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
male_titanic <- male_titanic %>%
mutate(predictions=predict(model_loess_male),
sex='male')
female_titanic <- female_titanic %>%
mutate(predictions=predict(model_loess_female),
sex='female')
# could also mutuate predictions to model
predict_titanic <- rbind(male_titanic, female_titanic)
loess_plot <- predict_titanic %>%
ggplot() +
geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
geom_line(aes(Fare, predictions, color=sex)) +
labs(y = "Prob. of survival", x = "Fare")
loess_plot
#For MSE Calculation: classifying predictied probability values > 0.5 as 1 and <0.5 as 0
classified_male_titanic = ifelse(predict(model_loess_male, type = "link") > 0.5, 1, 0)
classified_female_titanic = ifelse(predict(model_loess_female, type = "link") > 0.5, 1, 0)
predicted_classifications = rbind(classified_male_titanic,classified_female_titanic)
predicted_classifications
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
male_titanic <- male_titanic %>%
mutate(predictions=predict(model_loess_male),
sex='male')
female_titanic <- female_titanic %>%
mutate(predictions=predict(model_loess_female),
sex='female')
# could also mutuate predictions to model
predict_titanic <- rbind(male_titanic, female_titanic)
loess_plot <- predict_titanic %>%
ggplot() +
geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
geom_line(aes(Fare, predictions, color=sex)) +
labs(y = "Prob. of survival", x = "Fare")
loess_plot
#For MSE Calculation: classifying predictied probability values > 0.5 as 1 and <0.5 as 0
classified_male_titanic = ifelse(predict(model_loess_male, type = "link") > 0.5, 1, 0)
classified_female_titanic = ifelse(predict(model_loess_female, type = "link") > 0.5, 1, 0)
predicted_classifications = rbind(classified_male_titanic,classified_female_titanic)
head(predicted_classifications)
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
male_titanic <- male_titanic %>%
mutate(predictions=predict(model_loess_male),
sex='male')
female_titanic <- female_titanic %>%
mutate(predictions=predict(model_loess_female),
sex='female')
# could also mutuate predictions to model
predict_titanic <- rbind(male_titanic, female_titanic)
loess_plot <- predict_titanic %>%
ggplot() +
geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
geom_line(aes(Fare, predictions, color=sex)) +
labs(y = "Prob. of survival", x = "Fare")
loess_plot
#For MSE Calculation: classifying predictied probability values > 0.5 as 1 and <0.5 as 0
classified_male_titanic = ifelse(predict(model_loess_male, type = "link") > 0.5, 1, 0)
classified_female_titanic = ifelse(predict(model_loess_female, type = "link") > 0.5, 1, 0)
predicted_classifications = rbind(classified_male_titanic,classified_female_titanic)
typeof(predicted_classifications)
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
male_titanic <- male_titanic %>%
mutate(predictions=predict(model_loess_male),
sex='male')
female_titanic <- female_titanic %>%
mutate(predictions=predict(model_loess_female),
sex='female')
# could also mutuate predictions to model
predict_titanic <- rbind(male_titanic, female_titanic)
loess_plot <- predict_titanic %>%
ggplot() +
geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
geom_line(aes(Fare, predictions, color=sex)) +
labs(y = "Prob. of survival", x = "Fare")
loess_plot
#For MSE Calculation: classifying predictied probability values > 0.5 as 1 and <0.5 as 0
#classified_male_titanic = ifelse(predict(model_loess_male, type = "link") > 0.5, 1, 0)
#classified_female_titanic = ifelse(predict(model_loess_female, type = "link") > 0.5, 1, 0)
print("Mean Squared Error for Parametric Model:")
model_lm <- lm(formula=Survived~Fare+Sex, data = titanic)
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
male_titanic <- male_titanic %>%
mutate(predictions=predict(model_loess_male),
sex='male')
female_titanic <- female_titanic %>%
mutate(predictions=predict(model_loess_female),
sex='female')
# could also mutuate predictions to model
predict_titanic <- rbind(male_titanic, female_titanic)
loess_plot <- predict_titanic %>%
ggplot() +
geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
geom_line(aes(Fare, predictions, color=sex)) +
labs(y = "Prob. of survival", x = "Fare")
loess_plot
#For MSE Calculation: classifying predictied probability values > 0.5 as 1 and <0.5 as 0
#classified_male_titanic = ifelse(predict(model_loess_male, type = "link") > 0.5, 1, 0)
#classified_female_titanic = ifelse(predict(model_loess_female, type = "link") > 0.5, 1, 0)
print("Mean Squared Error for Parametric Model:")
model_lm <- lm(formula=Survived~Fare+Sex, data = titanic_data)
print(
model_lm %>%
residuals(type='response') %>%
.^2 %>%
mean())
print("Mean Squared Error for Local Model:")
print(mean((predict_titanic$predictions - predict_titanic$Survived) ^ 2))
male_titanic <- titanic_data %>%  filter(Sex=='male')
female_titanic <- titanic_data %>%  filter(Sex=='female')
model_loess_male <- loess(formula=Survived ~ Fare, data = male_titanic, span = 0.5, degree=2,  method='loess')
model_loess_female <- loess(formula=Survived ~ Fare, data = female_titanic, span = 0.5, degree=2,  method='loess')
male_titanic <- male_titanic %>%
mutate(predictions=predict(model_loess_male),
sex='male')
female_titanic <- female_titanic %>%
mutate(predictions=predict(model_loess_female),
sex='female')
# could also mutuate predictions to model
predict_titanic <- rbind(male_titanic, female_titanic)
loess_plot <- predict_titanic %>%
ggplot() +
geom_jitter(aes(x=Fare, y=Survived, color=Sex), alpha = 0.4) +
geom_line(aes(Fare, predictions, color=sex)) +
labs(y = "Prob. of survival", x = "Fare")
print("Mean Squared Error for Parametric Model:")
model_lm <- lm(formula=Survived~Fare+Sex, data = titanic_data)
print(
model_lm %>%
residuals(type='response') %>%
.^2 %>%
mean())
print("Mean Squared Error for Local Model:")
print(mean((predict_titanic$predictions - predict_titanic$Survived) ^ 2))
loess_plot
MLE_model <- glm(Survived ~ Fare+Sex, data = titanic_data, family = binomial)
titanic_data %>%
ggplot() +
geom_point(aes(Fare, Survived, color=Sex), alpha = 0.4)+
geom_smooth(aes(Fare, Survived, color=Sex), method = "glm", method.args = c(family = binomial), se = FALSE) +
labs(y = "Prob. of survival", x = "Fare")+
theme(plot.title = element_text( size = 12),
axis.title = element_text( size = 12))+
theme(plot.title = element_text(hjust = 0.5))
summary(MLE_model)
Teams$predicted <- predict(poisson_model)
library(tidyverse)
library(broom)
library(repr)
library(modelr)
library(gridExtra)
library(caret)
library(dplyr)
library(ggplot2)
library(Lahman)
#renaming column names for better interpretability
Teams <- Teams %>% rename(runs_scored = R)
#renaming column names for better interpretability
#Teams <- Teams %>% rename(runs_scored = R)
#Teams <- Teams %>% rename(no_of_walks = BB)
#Teams <- Teams %>% rename(no_of_hits = H)
Teams <- Teams.omit(airquality)
#renaming column names for better interpretability
#Teams <- Teams %>% rename(runs_scored = R)
#Teams <- Teams %>% rename(no_of_walks = BB)
#Teams <- Teams %>% rename(no_of_hits = H)
Teams <- na.omit(Teams)
my_plot_1 <- ggplot(Teams, aes(runs_scored,no_of_walks))+
geom_point(alpha = 0.3)+
labs(title = 'Exploratory analysis of total runs',
x = "number of walks",
y = "total runs scored") +
theme(plot.title = element_text( size = 12),
axis.title = element_text( size = 12))+
theme(plot.title = element_text(hjust = 0.5))
my_plot_2 <- ggplot(Teams, aes(runs_scored,no_of_hits))+
geom_point(alpha = 0.3)+
labs(title = 'Exploratory analysis of total runs',
x = "number of hits",
y = "total runs scored") +
theme(plot.title = element_text( size = 12),
axis.title = element_text( size = 12))+
theme(plot.title = element_text(hjust = 0.5))
my_plot_1
my_plot_2
poisson_model <- glm(runs_scored ~ no_of_walks + no_of_hits, Teams, family = poisson(link = "log"))
summary(poisson_model)
Teams$predicted <- predict(poisson_model)
Teams$residuals <- residuals(poisson_model)
Teams %>%
gather(key = "iv", value = "x", -runs_scored, -predicted, -residuals) %>%  # Get data into shape
ggplot(aes(x = x, y = runs_scored)) +
geom_segment(aes(xend = x, yend = predicted), alpha = .2) +
geom_point(aes(color = residuals)) +
scale_color_gradient2(low = "blue", mid = "white", high = "red") +
guides(color = FALSE) +
geom_point(aes(y = predicted), shape = 1) +
facet_grid(~ iv, scales = "free_x") +  # Split panels here by `iv`
theme_bw()
Teams$predicted <- predict(poisson_model)
Teams$residuals <- residuals(poisson_model)
ggplot(Teams, aes(x = no_of_hits, y = runs_scored)) +
geom_segment(aes(xend = no_of_hits, yend = predicted), alpha = .2) +  # Lines to connect points
geom_point() +  # Points of actual values
geom_point(aes(y = predicted), shape = 1) +  # Points of predicted values
theme_bw()
Teams$predicted <- predict(poisson_model)
Teams$residuals <- residuals(poisson_model)
ggplot(Teams, aes(x = no_of_hits, y = runs_scored)) +
geom_segment(aes(xend = no_of_hits, yend = predicted), alpha = .4) +  # Lines to connect points
geom_point() +  # Points of actual values
geom_point(aes(y = predicted), shape = 1) +  # Points of predicted values
theme_bw()
Deviances<-residuals(poisson_model, type = "deviance")
plot(predict(poisson_model), Deviances, xlab="Fitted values", ylab = "Deviance Residuals", ylim = max(abs(Deviances))*c(-1,1))
library(tidyverse)
library(broom)
library(repr)
library(modelr)
library(gridExtra)
library(caret)
library(dplyr)
library(ggplot2)
library(Lahman)
#renaming column names for better interpretability
Teams <- Teams %>% rename(runs_scored = R)
setwd("~/Downloads/block 4/DSCI_522_Group_412")
